{
    "components": {
        "cache_policy": {
            "type": "ext",
            "displayname": "CK CloudFront Cache Policy",
            "description": "Deploys an AWS CloudFront Cache Policy. Cache policies can be applied to one or more CloudFront Distribution Behaviors for one or more CloudFront Distributions.",
            "cloud": "AWS",
            "ck_plugin_tier": 3,
            "resources": ["AWS::CloudFront::CachePolicy"],
            "policy": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "cloudfront:CreateCachePolicy",
                        "cloudfront:UpdateCachePolicy",
                        "cloudfront:ListDistributionsByCachePolicyId",
                        "cloudfront:GetCachePolicyConfig",
                        "cloudfront:DeleteCachePolicy",
                        "cloudfront:ListCachePolicies",
                        "cloudfront:GetCachePolicy"
                    ],
                    "Resource": "*"
                }]
            },
            "input": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name to identify the cache policy.",
                        "common": true
                    },
                    "description": {
                        "type": "string",
                        "description": "A comment to describe the cache policy. The comment cannot be longer than 128 characters.",
                        "common": true
                    },
                    "default_ttl": {
                        "type": "integer",
                        "description": "The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object's time to live (TTL) only when the origin does not send Cache-Control or Expires headers with the object.",
                        "default": 86400,
                        "common": true
                    },
                    "min_ttl": {
                        "type": "integer",
                        "description": "The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.",
                        "default": 1
                    },
                    "max_ttl": {
                        "type": "integer",
                        "description": "The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends Cache-Control or Expires headers with the object.",
                        "default": 86400
                    },
                    "enable_accept_encoded_gzip": {
                        "type": "boolean",
                        "description": "A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.",
                        "default": true
                    },
                    "enable_accept_encoded_brotli": {
                        "type": "boolean",
                        "description": "A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.",
                        "default": true
                    },
                    "header_behavior": {
                        "type": "string",
                        "description": "Determines which headers in viewer requests are included in the cache key and in requests that CloudFront sends to the origin.",
                        "common": true,
                        "default": "none",
                        "enum": ["none","whitelist"]
                    },
                    "headers": {
                        "type": "array",
                        "description": "Contains a list of HTTP header names related to the chosen header behavior.",
                        "common": true,
                        "default": [],
                        "items": {
                            "type": "string",
                            "description": "The name of the HTTP header"
                        }
                    },
                    "cookie_behavior": {
                        "type": "string",
                        "description": "Determines which cookies in viewer requests are included in the cache key and in requests that CloudFront sends to the origin.",
                        "common": true,
                        "default": "none",
                        "enum": ["none","whitelist","allExcept","all"]
                    },
                    "cookies": {
                        "type": "array",
                        "description": "Contains a list of cookie names related to the chosen cookie behavior.",
                        "common": true,
                        "default": [],
                        "items": {
                            "type": "string",
                            "description": "The name of the cookie"
                        }
                    },
                    "query_string_behavior": {
                        "type": "string",
                        "description": "Determines which URL query strings in viewer requests are included in the cache key and in requests that CloudFront sends to the origin.",
                        "common": true,
                        "default": "none",
                        "enum": ["none","whitelist","allExcept","all"]
                    },
                    "query_strings": {
                        "type": "array",
                        "description": "Contains a list of URL query string names related to the chosen query string behavior.",
                        "common": true,
                        "default": [],
                        "items": {
                            "type": "string",
                            "description": "The name of the URL query string"
                        }
                    }
                }
            },
            "props": {
                "id": {
                    "type": "string",
                    "description": "The ID of the cache policy"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cache policy"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the cache policy"
                },
                "etag": {
                    "type": "string",
                    "description": "The current version of the cache policy."
                }
            },
            "examples": [
                {
                    "displayname": "Cache Policy",
                    "notes": "A custom cache policy with no header, query string, or cookie caching.",
                    "definition": {
                        "type": "&cloudfront.cache_policy"
                    }
                },
                {
                    "displayname": "Cache Policy",
                    "notes": "Custom cache policy with complex caching behaviors.",
                    "definition": {
                        "type": "&cloudfront.cache_policy",
                        "default_ttl": 2592000,
                        "header_behavior": "whitelist",
                        "headers": ["Version"],
                        "cookie_behavior": "all",
                        "query_string_behavior": "allExcept",
                        "query_strings": ["customer_id"]
                    }
                }
            ]
        }
    }
}